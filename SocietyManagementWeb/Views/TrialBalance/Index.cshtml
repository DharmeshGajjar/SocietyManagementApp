@model SocietyManagementWeb.Models.TrialBalanceModel
@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int isAdministrator = HttpContextAccessor.HttpContext.Session.GetInt32("IsAdministrator").Value;
    List<SocietyManagementWeb.Models.TrialBalanceModel> trialbalList = ViewBag.trialbalList as List<SocietyManagementWeb.Models.TrialBalanceModel>;
    List<SelectListItem> layoutList = ViewBag.layoutList as List<SelectListItem>;
    List<SelectListItem> pageNoList = ViewBag.pageNoList as List<SelectListItem>;
    var userRight = ViewBag.userRight as SocietyManagementWeb.Models.UserFormRightModel;
    string headerAdd = "";
    string headerList = "";
    string gridAdd = "";
    string gridList = "";
    bool headerAddTrue = false;
    bool headerListTrue = false;

    if (userRight != null && (userRight.IsAdd || userRight.IsEdit) && userRight.IsList)
    {
        headerList = "active";
        gridList = "show active";
        headerAddTrue = true;
    }
    else if (userRight != null && (userRight.IsAdd || userRight.IsEdit))
    {
        headerAdd = "active";
        gridAdd = "show active";
        headerAddTrue = true;
    }
    else if (userRight != null && userRight.IsList)
    {
        headerList = "active";
        gridList = "show active";
        headerAddTrue = true;
    }
}
<div class="card card-primary">
    <div class="card-header" style="font-family:Verdana">
        <h6> Trial Balance</h6>
    </div>
    <div class="card-body">
        <div class="col-md-12">
            @if (userRight != null && userRight.IsList)
            {
            <div class="table-responsive mt-1" style="font-family:Verdana;font-size:small;font-display:inherit">
                <div class="row mt-3">
                    <div class="col-md-2">
                        <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                            From Date <span class="required">*</span>
                        </label>

                        <div class="form-outline form-white mb-2">
                            @Html.TextBoxFor(x => x.GenFrDate, new { @class = "form-control form-control-lg", @placeholder = "From Date", @tabindex = "1", @style = "font-family: Verdana;font-size:small; height:35px; width: 160px", @required = "required", @type = "date" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                            To Date <span class="required"></span>
                        </label>
                        <div class="form-outline form-white mb-2">
                            @Html.TextBoxFor(x => x.GenToDate, new { @class = "form-control form-control-lg", @placeholder = "To Date", @tabindex = "2", @style = "font-family: Verdana;font-size:small; height:35px; width: 160px", @required = "required", @type = "date" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                            Account Group<span class="required"></span>
                        </label>
                        <div class="form-outline form-white mb-2">
                            @Html.DropDownListFor(x => x.GroupName, Model.GroupList, "Select", new { @class = "form-control select2 GroupName", @tabindex = "3", @style = "font-family: Verdana;font-size:small; height:35px" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                            Department <span class="required"></span>
                        </label>
                        <div class="form-outline form-white mb-2">
                            @Html.DropDownListFor(x => x.Department, Model.DeptList, "Select", new { @class = "form-control select2 Department", @tabindex = "4", @style = "font-family: Verdana;font-size:small; height:35px", @required = "required" })
                        </div>
                    </div>
                    <div class="col-md-5 mt-1 text-right">
                        <button class="btn btn-primary px-4 text-white" style="font-family:Verdana;font-size:medium" id="btnSave" onclick=" loadData();">
                            View
                        </button>
                        <a href="/TrialBalance/index" class="btn btn-warning px-4 text-dark" style="font-family:Verdana;font-size:medium">
                            Cancel (Esc)
                        </a>
                    </div>
                </div>
                <div class="col-md-12 col-12 mb-2 mt-2">
                    <div class="row">
                        <div class="col-md-1 mb-2 float-left">
                            <select class="form-control form-control-sm" onchange="loadData()" id="drpReportPageNoDatable">
                                @for (int i = 0; i < pageNoList.Count; i++)
                                {
                                    string checkedd = "checked";
                                    <option checked="@checkedd" value="@pageNoList[i].Value">@pageNoList[i].Text</option>
                                    checkedd = string.Empty;
                                }

                            </select>
                        </div>
                        <div class="col-md-5 col-12">
                            <div class="row">
                                <div class="col-md-6">
                                    <select class="form-control select2 drpReportLayout">
                                        <option value="" ; style="width:200px">--Select Layout--</option>
                                        @if (layoutList != null && layoutList.Count > 0)
                                        {
                                            foreach (var item in layoutList)
                                            {
                                                if (item.Selected)
                                                {
                                                    <option selected value="@item.Value">@item.Text </option>
                                                }
                                                else
                                                {
                                                    <option value="@item.Value">@item.Text </option>
                                                }
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="col-md-2 col-auto mb-2 custommt-2-3">
                                    @if (isAdministrator == 1)
                                    {
                                        <button class="btn btn-dark btn-sm text-white" style="font-family:Verdana;font-size:medium" onclick="window.open('/GridMaster/Index/' + $('.drpReportLayout').val(), '_blank');">
                                            Edit
                                        </button>
                                    }
                                </div>
                                <div class="col-md-4 mb-2 custommt-2-3">
                                    <button class="btn btn-primary btn-sm" id="btnExportToExcel">Excel</button>
                                    <button class="btn btn-primary btn-sm ml-6" id="btnExportToPDF">PDF</button>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3"></div>
                        <div class="col-md-3 col-12 float-right">
                            <input type="text" class="form-control form-control-sm" placeholder="Search" id="txtReportSearchDataTable" />
                        </div>
                    </div>
                </div>
                <div class="dataTable">

                </div>
                <div class="pager float-right"></div>
            </div>
            }
        </div>
    </div>
</div>

<script>
        @*$(document).ready(function () {
            var driverName = '@Html.Raw(Model.Name)';
            if (driverName != null && driverName != '') {
                GoToAddTab()
            }
            else {
                GoToListTab()
            }
            var status = '@Html.Raw(ViewBag.FocusType)';
            if (status != null && status != '') {
                if (status == "0") {
                    $("#txtDriveNm").focus();
                }
                if (status == "1") {
                    $("#txtLicNo").focus();
                }
                if (status == "3") {
                    $("#txtMobile").focus();
                }
                if (status == "4") {
                    $("#txtAddress").focus();
                }
            }
            else {
                $("#txtDriveNm").focus();
            }

        });*@

    //function GoToAddTab() {
    //    $('#custom-tabs-three-list-tab').removeClass('active');
    //    $('#custom-tabs-three-add-tab').addClass('active');

    //    $('#custom-tabs-three-list').removeClass('active');
    //    $('#custom-tabs-three-add').addClass('active');
    //    $('#custom-tabs-three-add').addClass('show');
    //    $('#txtDriverNm').focus();
    //}
    //function GoToListTab() {
    //    $('#custom-tabs-three-list-tab').addClass('active');
    //    $('#custom-tabs-three-add-tab').removeClass('active');

    //    $('#custom-tabs-three-list').addClass('active');
    //    $('#custom-tabs-three-list').addClass('show');
    //    $('#custom-tabs-three-add').removeClass('active');
    //    $('#custom-tabs-three-add').removeClass('show');
    //    $('#txtReportSearchDataTable').focus();
    //}
</script>

<script>

    var isRecentCalled = false;


    $(function () {


        var pageIndex = '';
        var pageSize = '';
        var totalRecord = '';
        var isDelete = '@Html.Raw(userRight.IsDelete)';
        var isEdit = '@Html.Raw(userRight.IsEdit)';
    })

    var timer = null;
    $('#txtReportSearchDataTable').keyup(function (e) {
        if (e.keyCode >= 112 && e.keyCode <= 123) {
            e.preventDefault();
            return false;
        }
        else {
            clearTimeout(timer);

            timer = setTimeout(loadData, 1000)
        }

    });

    function loadData(pageIndex, columnName, sortBy) {
            isRecentCalled = true;
            if (pageIndex == undefined || pageIndex == "" || pageIndex == "0" || pageIndex == 0) {
                pageIndex = 1;
            }
            var layoutId = $('.drpReportLayout').val();

            if (!layoutId) {
                $('.drpReportLayout').val($('.drpReportLayout').children('option').eq(1).prop('value'));
                SetSelect2()

            }
            if (!columnName) {
                columnName = '';
            }
            if (!sortBy) {
                sortBy = '';
            }
        var fromDate = $('#GenFrDate').val();
        var toDate = $('#GenToDate').val();
        var groupName = $('#GroupName').val();
        var department = $('#Department').val();
        if (fromDate == null || fromDate == "" || fromDate == undefined || toDate == null || toDate == "" || toDate == undefined)
        {
            showErrorMessage("Please select to date and account!");
            return false;
        }

            $('.dataTable').html();
            $.ajax({
                url: '/TrialBalance/GetReportView',
                type: 'GET',
                data: { pageIndex: pageIndex, pageSize: $('#drpReportPageNoDatable').val(), searchValue: $('#txtReportSearchDataTable').val(), gridMstId: $('.drpReportLayout').val(), columnName: columnName, sortby: sortBy,fromDate : fromDate,toDate : toDate,groupId : groupName,departmentId :department },
                dataType: 'HTML',
                traditional: true, // add this
                success: function (data) {
                    $('.dataTable').html(data);
                    setTimeout(function () {
                        isRecentCalled = false;
                    }, 2000)
                },
                failure: function (response) {
                    errorMessage(response);
                }
            });
    }

</script>
<script>
    var isRecentCalledEsc = false;
    (function (code) {
        code(window.jQuery, document, window);
    }(function ($, document, window) {
        $(function () {
            $(window)
                .initKeyboard({ debug: 1 })
                .on('Alt+V', function () {
                    loadData();
                })
        });
    }));

    $('#btnExportToExcel').click(function () {
        var fromDate = $('#GenFrDate').val();
        var toDate = $('#GenToDate').val();
        var groupName = $('#GroupName').val();
        var department = $('#Department').val();
        if (fromDate == null || fromDate == "" || fromDate == undefined || toDate == null || toDate == "" || toDate == undefined) {
            showErrorMessage("Please select to date!");
            return false;
        }
        window.location.href = "/TrialBalance/ExportToExcelPDF?gridMstId=" + $('.drpReportLayout').val() + "&searchValue=" + $('#txtReportSearchDataTable').val() + "&type=1&toDate=" + toDate + "&groupId=" + groupName + "&fromDate=" + fromDate + "&departmentId=" + department;
    })

    $('#btnExportToPDF').click(function () {
        var fromDate = $('#GenFrDate').val();
        var toDate = $('#GenToDate').val();
        var groupName = $('#GroupName').val();
        var department = $('#Department').val();
        if (fromDate == null || fromDate == "" || fromDate == undefined || toDate == null || toDate == "" || toDate == undefined) {
            showErrorMessage("Please select to date!");
            return false;
        }
        window.location.href = "/TrialBalance/ExportToExcelPDF?gridMstId=" + $('.drpReportLayout').val() + "&searchValue=" + $('#txtReportSearchDataTable').val() + "&type=2&toDate=" + toDate + "&groupId=" + groupName + "&fromDate=" + fromDate + "&departmentId=" + department;
    })
</script>
<script>
    function SetSelect2() {
        $(".select2").select2({
            placeholder: "---Select---",
        });
    }

    $(document).ready(function () {

        $(".Department").select2({
            placeholder: "---Select---",
        });

        $(".GroupName").select2({
            placeholder: "---Select---",
        });


        $('.drpReportLayout').select2({
            placeholder: "---Select---",
        });
    });
</script>